using System.Data.OleDb;


        OleDbCommand komanda;
        OleDbConnection konekcija;
        DataTable tabela = new DataTable();
        OleDbDataAdapter adapter;
        OleDbDataReader reader;
      
         
		//relative paths of base linking
			string putanja = Environment.CurrentDirectory;
            string[] putanjaBaze = putanja.Split(new string[] { "bin" }, StringSplitOptions.None);
            AppDomain.CurrentDomain.SetData("DataDirectory", putanjaBaze[0]);
            konekcija = new OleDbConnection(@"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=|DataDirectory|\B25Studenti.mdb");
        

		//new
            try
            {
                konekcija.Open();
                komanda = new OleDbCommand("SELECT * FROM Student", konekcija);
                adapter = new OleDbDataAdapter(komanda);
                tabela = new DataTable();
                adapter.Fill(tabela);
                int i;
                i = tabela.Rows.Count + 1;
                tbSifra.Text = i.ToString();
                konekcija.Close();

            }
            catch
            {
                MessageBox.Show("Greska!");
            }
        

       //loading form
            try
            {
                konekcija.Open();
                komanda = new OleDbCommand("SELECT * FROM Student", konekcija);
                adapter = new OleDbDataAdapter(komanda);
                adapter.Fill(tabela);
                string pom;
                for(int i=0;i<tabela.Rows.Count; i++)
                {
                    pom = tabela.Rows[i]["StudentID"].ToString() + " -";
                    pom+= tabela.Rows[i]["Ime"].ToString() + " ";
                    pom += tabela.Rows[i]["Prezime"].ToString();
                    lvStudenti.Items.Add(pom);
                }
                konekcija.Close();
            }
            catch
            {
                MessageBox.Show("Greska!");
            }
        

        //selected items in listbox
		
            int sel = lvStudenti.FocusedItem.Index;
            tbSifra.Text = tabela.Rows[sel]["StudentID"].ToString();
            tbIme.Text = tabela.Rows[sel]["Ime"].ToString();
            tbPrezime.Text = tabela.Rows[sel]["Prezime"].ToString();
            if (tabela.Rows[sel]["DatumRodjenja"].ToString() != "")
            {
                DateTime dr;
                string s = tabela.Rows[sel]["DatumRodjenja"].ToString();
                dr = Convert.ToDateTime(s);
                tbDr.Text = dr.ToShortDateString().ToString();
            }
            else
            {
                tbDr.Text = "";
            }
            tbTelefon.Text = tabela.Rows[sel]["Telefon"].ToString();
            if (tabela.Rows[sel]["Email"].ToString()!="")
            {
                string m = tabela.Rows[sel]["Email"].ToString();
                tbMejl.Text = m;
            }
            else
            {
                tbMejl.Text = "";
            }
            tbAdresa.Text = tabela.Rows[sel]["Adresa"].ToString();
            tbBrIndeksa.Text= tabela.Rows[sel]["BrojIndeksa"].ToString();
       
	   
		//data entry in the database
            if (tbMejl.Text != "")
            {
                if (!tbMejl.Text.Contains('@'))
                {
                    MessageBox.Show("Mejl nije ispravan");
                    tbMejl.Text = "";
                    return;
                }
                string[] splitter = new string[2];
                splitter = tbMejl.Text.Split('@');
                if (!(splitter[0] != "" && splitter[1] != "" && splitter.Count() == 2))
                {
                    MessageBox.Show("Mejl nije ispravan!", "Greska!");
                    tbMejl.Text = "";
                    return;
                }
                else
                    if (splitter[1].IndexOf('.') < 1)
                {
                    MessageBox.Show("Mejl nije ispravan!", "Greska!");
                    tbMejl.Text = "";
                    return;
                }
            }
            string id, ime, prezime, mejl, dr, adresa, telefon, brindeksa;
            id = tbSifra.Text;
            ime = tbIme.Text;
            prezime = tbPrezime.Text;
            mejl = tbMejl.Text;
            dr = tbDr.Text;
            adresa = tbAdresa.Text;
            brindeksa = tbBrIndeksa.Text;
            telefon = tbTelefon.Text;
            try
            {
                int im;
                string s = tbBrIndeksa.Text;
                im = s.IndexOf('/');

                if (tbSifra.Text == "" || tbIme.Text == "" || tbPrezime.Text == "" || tbBrIndeksa.Text == "")
                {
                    MessageBox.Show("Sifra, Ime Prezime i Broj indeksa su obavezna polja!");
                }

                //textBox1.Text = im.ToString();


                 else if(tbBrIndeksa.Text!="")
                 {
                    if (im < 0)
                    {
                        MessageBox.Show("Indeks nije ispravan!", "Greska!");
                        tbBrIndeksa.Text = "";
                        tbBrIndeksa.Focus();
                        return;
                    }
                    if (im > 3)
                    {
                        MessageBox.Show("Indeks nije ispravan!", "Greska!");
                        tbBrIndeksa.Text = "";
                        tbBrIndeksa.Focus();
                        return;
                    }
                }

                else if (tbDr.Text!="")
                {
                    konekcija.Open();
                    string cmd = "INSERT INTO Student(StudentID,Ime,Prezime,BrojIndeksa,DatumRodjenja,Adresa,Email,Telefon) VALUES ('" + id + "', '" + ime + "', '" + prezime + "', '" + brindeksa + "', '" + dr + "', '" + adresa + "', '" + mejl + "', '" + telefon + "')";
                    komanda = new OleDbCommand(cmd, konekcija);
                    komanda.ExecuteNonQuery();
                    //konekcija.Close();
                    MessageBox.Show("Podaci su uspesno upisani u datoteku!");
                    MessageBox.Show("Polja ce se restartovati!");
                    tbTelefon.Text=tbAdresa.Text = tbIme.Text = tbPrezime.Text = tbBrIndeksa.Text = tbDr.Text = tbMejl.Text = "";
                    tbSifra.Text = "";
                }
                else
                {
                    konekcija.Open();
                    string cmd = "INSERT INTO Student(StudentID,Ime,Prezime,BrojIndeksa,Adresa,Email,Telefon) VALUES ('" + id + "', '" + ime + "', '" + prezime + "', '" + brindeksa + "', '" + adresa + "', '" + mejl + "', '" + telefon + "')";
                    komanda = new OleDbCommand(cmd, konekcija);
                    komanda.ExecuteNonQuery();
                    //konekcija.Close();
                    MessageBox.Show("Podaci su uspesno upisani u datoteku!");
                    MessageBox.Show("Polja ce se restartovati!");
                    tbTelefon.Text = tbAdresa.Text = tbIme.Text = tbPrezime.Text = tbBrIndeksa.Text = tbDr.Text = tbMejl.Text = "";
                    tbSifra.Text = "";
                }
            }
            catch
            {
                konekcija.Close();
                MessageBox.Show("Greska prilikom upisa u bazu!  Proverite da li ste uneli validne podatke u polja!");
                DialogResult dialogResult = MessageBox.Show("Da li zelite da se polja restartuju?", "", MessageBoxButtons.YesNo);
                if (dialogResult == DialogResult.Yes)
                {
                    tbTelefon.Text = tbAdresa.Text = tbIme.Text = tbPrezime.Text = tbBrIndeksa.Text = tbDr.Text = tbMejl.Text = "";
                }
                else if (dialogResult == DialogResult.No)
                {
                    tbDr.Focus();
                }
            }

            konekcija.Close();
            lvStudenti.Clear();
            konekcija.Open();
            komanda = new OleDbCommand("Select * from Student", konekcija);
            adapter = new OleDbDataAdapter(komanda);
            tabela = new DataTable();
            adapter.Fill(tabela);
            string pom;
            int i;
            for (i = 0; i < tabela.Rows.Count; i++)
            {
                pom = tabela.Rows[i]["StudentID"].ToString() + " - ";
                pom += tabela.Rows[i]["Ime"].ToString() + " ";
                pom += tabela.Rows[i]["Prezime"].ToString();
                lvStudenti.Items.Add(pom);
            }
            konekcija.Close();
       
	   
	   //database update in database
            try
            {
                if (tbMejl.Text != "")
                {
                    if (!tbMejl.Text.Contains('@'))
                    {
                        MessageBox.Show("Mejl nije ispravan");
                        tbMejl.Text = "";
                        return;
                    }
                    string[] splitter = new string[2];
                    splitter = tbMejl.Text.Split('@');
                    if (!(splitter[0] != "" && splitter[1] != "" && splitter.Count() == 2))
                    {
                        MessageBox.Show("Mejl nije ispravan!", "Greska!");
                        tbMejl.Text = "";
                        return;
                    }
                    else
                        if (splitter[1].IndexOf('.') < 1)
                    {
                        MessageBox.Show("Mejl nije ispravan!", "Greska!");
                        tbMejl.Text = "";
                        return;
                    }
                }
                    int im;
                    string s = tbBrIndeksa.Text;
                    im = s.IndexOf('/');
                    textBox1.Text= im.ToString();
                if (im < 0)
                {
                    MessageBox.Show("Indeks nije ispravan!", "Greska!");
                    tbBrIndeksa.Text = "";
                    return;
                }
                if (im >3)
                {
                    MessageBox.Show("Indeks nije ispravan!", "Greska!");
                    tbBrIndeksa.Text = "";
                    return;
                }
                else
                {
                    konekcija.Open();
                    string update = "Update Student set [Ime] = @ime, [Prezime]=@prez, [BrojIndeksa]=@br,[DatumRodjenja]=@dr,[Adresa]=@adr,[Email]=@email,[Telefon]=@tel WHERE [StudentID]=@id";
                    komanda = new OleDbCommand(update, konekcija);
                    komanda.Parameters.AddWithValue("@ime", tbIme.Text);
                    komanda.Parameters.AddWithValue("@prez", tbPrezime.Text);
                    komanda.Parameters.AddWithValue("@br", tbBrIndeksa.Text);
                    if (tbDr.Text != "")
                        komanda.Parameters.AddWithValue("@dr", tbDr.Text);
                    else
                    {
                        komanda.Parameters.AddWithValue("@dr", DBNull.Value);
                    }
                    if (tbAdresa.Text != "")
                        komanda.Parameters.AddWithValue("@adr", tbAdresa.Text);
                    else
                    {
                        komanda.Parameters.AddWithValue("@adr", DBNull.Value);
                    }
                    if (tbMejl.Text != "")
                        komanda.Parameters.AddWithValue("@email", tbMejl.Text);
                    else
                        komanda.Parameters.AddWithValue("@email", DBNull.Value);
                    if (tbTelefon.Text != "")
                        komanda.Parameters.AddWithValue("@tel", tbTelefon.Text);
                    else
                    {
                        komanda.Parameters.AddWithValue("@tel", DBNull.Value);
                    }
                    komanda.Parameters.AddWithValue("@id", Convert.ToInt32(tbSifra.Text));
                    komanda.ExecuteNonQuery();
                    MessageBox.Show("Uspesno updejtovano!");
                }
            }
             catch
             {
                konekcija.Close();
                MessageBox.Show("Greska prilikom upisa u bazu!  Proverite da li ste uneli validne podatke u polja!");
                DialogResult dialogResult = MessageBox.Show("Da li zelite da se polja restartuju?", "", MessageBoxButtons.YesNo);
                if (dialogResult == DialogResult.Yes)
                {
                    tbTelefon.Text = tbAdresa.Text = tbIme.Text = tbPrezime.Text = tbBrIndeksa.Text = tbDr.Text = tbMejl.Text = "";
                }
                else if (dialogResult == DialogResult.No)
                {
                    tbDr.Focus();
                }
            }
            konekcija.Close();
            lvStudenti.Clear();

            konekcija.Open();
            komanda = new OleDbCommand("Select * from Student", konekcija);
            adapter = new OleDbDataAdapter(komanda);
            tabela = new DataTable();
            adapter.Fill(tabela);
            string pom;
            int i;
            for (i = 0; i < tabela.Rows.Count; i++)
            {
                pom = tabela.Rows[i]["StudentID"].ToString() + " - ";
                pom += tabela.Rows[i]["Ime"].ToString() + " ";
                pom += tabela.Rows[i]["Prezime"].ToString();
                lvStudenti.Items.Add(pom);
            }
            konekcija.Close();

        