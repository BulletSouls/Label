using System.Data.OleDb;

		OleDbCommand komanda;
        OleDbConnection konekcija;
        OleDbDataReader rider;
		
		
		//function
		
		  void Isprazni()
        {
            textBox1.Text = textBox2.Text = textBox3.Text = textBox4.Text = "";

        }
        void popunaLV()
        {
            konekcija.Open();
            komanda = new OleDbCommand("Select * from KNJIGA order by KnjigaID", konekcija);
            OleDbDataReader rider = komanda.ExecuteReader();
            listView1.Items.Clear();
            while (rider.Read())
            {
                ListViewItem lv = new ListViewItem(rider[0].ToString());
                if (rider[1].ToString() != "")
                {
                    lv.SubItems.Add(rider[1].ToString());
                }
                else
                {
                    lv.SubItems.Add("");
                }
                lv.SubItems.Add(rider[2].ToString());
                lv.SubItems.Add(rider[3].ToString());
                listView1.Items.Add(lv);
            }
            rider.Close();
            komanda.Dispose();
            konekcija.Close();
        }

		//relative paths of base linking
			string putanja = Environment.CurrentDirectory;
            string[] putanjaBaze = putanja.Split(new string[] { "bin" }, StringSplitOptions.None);
            AppDomain.CurrentDomain.SetData("DataDirectory", putanjaBaze[0]);
            konekcija = new OleDbConnection(@"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=|DataDirectory|\DVDkolekcija.accdb");
		
		//data entry in the database

		if(textBox1.Text=="" || textBox3.Text=="" || textBox4.Text=="")
            {
                MessageBox.Show("Morate uneti obavezna polja!", "Informacija");
                textBox1.Text = textBox2.Text = textBox3.Text = textBox4.Text = "";
            }
            else
            {
                konekcija.Open();
                komanda = new OleDbCommand("Insert into KNJIGA (KnjigaID, UDK, ISBN, Naziv) values (@id, @udk, @isbn, @nzv)", konekcija);
                komanda.Parameters.AddWithValue("@id", Convert.ToInt32(textBox1.Text));
                if(textBox2.Text!="")
                {
                    komanda.Parameters.AddWithValue("@udk", textBox2.Text);
                }
                else
                {
                    komanda.Parameters.AddWithValue("@udk", DBNull.Value);
                }
                komanda.Parameters.AddWithValue("@isbn", textBox3.Text);
                komanda.Parameters.AddWithValue("@nzv", textBox4.Text);
                try
                {
                    komanda.ExecuteNonQuery();
                    MessageBox.Show("Uspesno upisana knjiga u bazu!");
                    textBox1.Text = textBox2.Text = textBox3.Text = textBox4.Text = "";
                }
                catch
                {
                    MessageBox.Show("Greska pri upisu!", "Greska");
                    textBox1.Text = textBox2.Text = textBox3.Text = textBox4.Text = "";

                }
                konekcija.Close();
                popunaLV();
            }
		
		//textchange
		
		 if (textBox1.Text != "")
            {
                int id = 0;
                bool ima = false;
                try
                {
                    id = Convert.ToInt32(textBox1.Text);
                }
                catch
                {
                    MessageBox.Show("Sifra mora biti broj i to pozitivan!");
                    textBox1.Text = "";
                }
                konekcija.Open();
                komanda = new OleDbCommand("Select * from KNJIGA", konekcija);
                rider = komanda.ExecuteReader();
                while(rider.Read())
                {
                    if(id==Convert.ToInt32(rider[0].ToString()))
                    {
                        ima = true;
                        break;
                    }
                }
                if(ima)
                {
                    if (rider[1].ToString() != "")
                    {
                        textBox2.Text = rider[1].ToString();
                    }
                    else
                    {
                        textBox2.Text = "";
                    }
                    textBox3.Text = rider[2].ToString();
                    textBox4.Text = rider[3].ToString();
                }
                else
                {
                    textBox2.Text = "";
                    textBox3.Text = "";
                    textBox4.Text = "";
                }
                konekcija.Close();
            }
            else
            {
                textBox1.Text = "";
            }
		
			//deleting data from the database

			  if(textBox1.Text=="")
            {
                MessageBox.Show("Morate uneti sifru knjige koju zelite da obrisete!");
                Isprazni();
            }
            else if(textBox1.Text!="" && textBox3.Text=="")
            {
                MessageBox.Show("Sifra knjige koju zelite da obrisete ne postoji u bazi!");
                Isprazni();
            }
            else
            {
                konekcija.Open();
                komanda = new OleDbCommand("Delete from KNJIGA where KnjigaID=" + Convert.ToInt32(textBox1.Text), konekcija);
                try
                {
                    komanda.ExecuteNonQuery();
                    MessageBox.Show("Uspesno obrisana knjiga!");
                    Isprazni();
                }
                catch
                {
                    MessageBox.Show("Greska pri brisanju!");
                    Isprazni();
                }
                konekcija.Close();
                popunaLV();
            }
	
		
		//database update in database

		if(textBox1.Text=="")
            {
                MessageBox.Show("Morate uneti sifru knjige koju zelite da azurirate!");
                Isprazni();
            }
            else if(textBox1.Text!="" && textBox3.Text=="")
            {
                MessageBox.Show("Sifra knjige koju ste uneli ne postoji!");
                Isprazni();
            }
            else
            {
                konekcija.Open();
                komanda = new OleDbCommand("Update KNJIGA set UDK=@u, ISBN=@i, Naziv=@nzv where KnjigaID=" + Convert.ToInt32(textBox1.Text), konekcija);
                if (textBox2.Text != "")
                {
                    komanda.Parameters.AddWithValue("@u", textBox2.Text);
                }
                else
                {
                    komanda.Parameters.AddWithValue("@u", DBNull.Value);
                }
                komanda.Parameters.AddWithValue("@i", textBox3.Text);
                komanda.Parameters.AddWithValue("@nzv", textBox4.Text);
                try
                {
                    komanda.ExecuteNonQuery();
                    MessageBox.Show("Uspesno azurirano!");
                    Isprazni();
                }
                catch
                {
                    MessageBox.Show("Greska pri azuriranju!");
                    Isprazni();
                }
                konekcija.Close();
                popunaLV();
            }
		
        