using System.Data.OleDb;

		OleDbConnection konekcija;
        OleDbCommand komanda, komanda2;
        OleDbDataAdapter adapter;
        DataTable tabela;		
		
			//relative paths of base linking
			
			
			string putanja = Environment.CurrentDirectory;
            string[] putanjaBaze = putanja.Split(new string[] { "bin" }, StringSplitOptions.None);
            AppDomain.CurrentDomain.SetData("DataDirectory", putanjaBaze[0]);
            konekcija = new OleDbConnection(@"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=|DataDirectory|\DVDkolekcija.accdb");


		
			//data entry in the database
			
			 string sifra = tbSifra.Text;
            string ime = tbIme.Text;
            string email = tbSifra.Text;
            try
            {
                if (tbSifra.Text == "" || tbIme.Text=="")
                {
                    MessageBox.Show("Sifra i ime su obavezna polja, popunite ih!");
                    tbSifra.Focus();
                }
                else if(tbEmail.Text=="")
                {
                    OleDbCommand cmd = new OleDbCommand();
                    cmd.CommandType = CommandType.Text;
                    cmd.CommandText = "insert into Producent (ProducentID,Ime) values ('" + sifra + "', '" + ime + "')";
                    cmd.Connection = konekcija;
                    konekcija.Open();
                    cmd.ExecuteNonQuery();
                    System.Windows.Forms.MessageBox.Show("Uspesno upisano u tabelu", "Informacija", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    konekcija.Close();
                    //listView1.Clear();
                    tbSifra.Text = tbIme.Text = tbSifra.Text = "";


                    konekcija.Open();
                    komanda = new OleDbCommand("Select * from Producent order by ProducentID ASC", konekcija);
                    OleDbDataReader r;
                    r = komanda.ExecuteReader();
                    listView1.Items.Clear();
                    while (r.Read())
                    {
                        ListViewItem lv = new ListViewItem(r[0].ToString());
                        lv.SubItems.Add(r[1].ToString());
                        lv.SubItems.Add(r[2].ToString());

                        listView1.Items.Add(lv);
                    }
                    r.Close();
                    komanda.Dispose();
                    konekcija.Close();
                }
                else
                {
                    OleDbCommand cmd = new OleDbCommand();
                    cmd.CommandType = CommandType.Text;
                    cmd.CommandText = "insert into Producent (ProducentID,Ime,Email) values ('" + sifra + "', '" + ime + "', '" + email + "')";
                    cmd.Connection = konekcija;
                    konekcija.Open();
                    cmd.ExecuteNonQuery();
                    System.Windows.Forms.MessageBox.Show("Uspesno upisano u tabelu", "Informacija", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    konekcija.Close();
                    //listView1.Clear();
                    tbSifra.Text = tbIme.Text = tbSifra.Text = "";


                    konekcija.Open();
                    komanda = new OleDbCommand("Select * from Producent order by ProducentID ASC", konekcija);
                    OleDbDataReader r;
                    r = komanda.ExecuteReader();
                    listView1.Items.Clear();
                    while (r.Read())
                    {
                        ListViewItem lv = new ListViewItem(r[0].ToString());
                        lv.SubItems.Add(r[1].ToString());
                        lv.SubItems.Add(r[2].ToString());

                        listView1.Items.Add(lv);
                    }
                    r.Close();
                    komanda.Dispose();
                    konekcija.Close();

                }
            }
            catch
            {
                MessageBox.Show("Uneta sifra postoji, unesite drugu!");
                tbSifra.Clear();
                tbSifra.Focus();
            }
			
			
			//deleting data from the database
			
			 try { 
            bool pom = false;
            konekcija.Open();
            komanda = new OleDbCommand("Select * from Producent", konekcija);
            komanda2 = new OleDbCommand("Select ProducentID from Producent", konekcija);
            adapter = new OleDbDataAdapter(komanda);
            tabela = new DataTable();
            adapter.Fill(tabela);
            OleDbDataReader r;

            r = komanda2.ExecuteReader();

            int i = Convert.ToInt32(tbSifra.Text);

            for (int j = 0; j < tabela.Rows.Count; j++)
            {
                r.Read();
                if (i == Int32.Parse(r[0].ToString()))
                    pom = true;
            }

            if (!pom)
            {
                MessageBox.Show("Unesite novi ID, uneti ne postoji u tabeli!", "Greska", MessageBoxButtons.OK, MessageBoxIcon.Error);
                tbSifra.Clear();
            }
            else
            {
                i++;
                string del = "DELETE * FROM Producent WHERE ProducentID=@id";
                komanda = new OleDbCommand(del, konekcija);
                komanda.Parameters.AddWithValue("@id", tbSifra.Text);

                try
                {
                    komanda.ExecuteNonQuery();
                    MessageBox.Show("Stavka je uspesno obrisana!", "Informacija", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                catch
                {
                    MessageBox.Show("Greska pri brisanju!", "Greska", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                tbSifra.Clear();
            }
            konekcija.Close();
            konekcija.Open();
            komanda = new OleDbCommand("Select * from Producent order by ProducentID ASC", konekcija);
            OleDbDataReader rd;
            rd = komanda.ExecuteReader();
            listView1.Items.Clear();
            while (rd.Read())
            {
                ListViewItem lv = new ListViewItem(rd[0].ToString());
                lv.SubItems.Add(rd[1].ToString());
                lv.SubItems.Add(rd[2].ToString());

                listView1.Items.Add(lv);
            }
            rd.Close();
            komanda.Dispose();
            konekcija.Close();
            tbSifra.Text = tbIme.Text = tbSifra.Text = "";
            }
            catch
            {
                MessageBox.Show("Popunite polje pod nazivom Sifra!");
                tbSifra.Focus();
            }
			
			//database update in database
			
			  konekcija.Open();
            string kom = "Update Producent set [Ime] = @ime, [Email] = @email where [ProducentID] =  @ID";
            komanda = new OleDbCommand(kom, konekcija);
            try
            {
                komanda.Parameters.AddWithValue("@ime", tbIme.Text);
                komanda.Parameters.AddWithValue("@email", tbEmail.Text);
                komanda.Parameters.AddWithValue("@ID", Convert.ToInt32(tbSifra.Text));
                MessageBox.Show("Uspesno azurirano!", "Informacija", MessageBoxButtons.OK, MessageBoxIcon.Information);

                komanda.ExecuteNonQuery();

            }
            catch (Exception ex1)
            {
                MessageBox.Show(ex1.ToString(), "Neuspelo!");
            }
            konekcija.Close();


            konekcija.Open();
            komanda = new OleDbCommand("Select * from Producent order by ProducentID ASC", konekcija);
            OleDbDataReader r;
            r = komanda.ExecuteReader();
            listView1.Items.Clear();
            while (r.Read())
            {
                ListViewItem lv = new ListViewItem(r[0].ToString());
                lv.SubItems.Add(r[1].ToString());
                lv.SubItems.Add(r[2].ToString());

                listView1.Items.Add(lv);
            }
            r.Close();
            komanda.Dispose();
            konekcija.Close();
            tbSifra.Text = tbIme.Text = tbSifra.Text = "";
			
			//textchange
			
			 try
            { 
            if (tbSifra.Text != "")
            {
                konekcija.Open();
                int sifra = Convert.ToInt32(tbSifra.Text);
                OleDbCommand komanda = new OleDbCommand("SELECT * FROM Producent where ProducentID=" + sifra, konekcija);
                OleDbDataReader readerNaziv = komanda.ExecuteReader();
                readerNaziv.Read();
                tbIme.Text = readerNaziv[1].ToString();
                tbEmail.Text = readerNaziv[2].ToString();
            }
            else
            {
                tbSifra.Clear(); tbIme.Clear(); tbEmail.Clear();
            }
            }
            catch
            {
                tbIme.Clear(); tbEmail.Clear();
                MessageBox.Show("Ne postoji, ali ga mozete uneti!");
            }
            konekcija.Close();
			
			//loading the form
			
			konekcija.Open();
            komanda = new OleDbCommand("Select * from Producent order by ProducentID ASC", konekcija);
            OleDbDataReader r;
            r = komanda.ExecuteReader();
            listView1.Items.Clear();
            while (r.Read())
            {
                ListViewItem lv = new ListViewItem(r[0].ToString());
                lv.SubItems.Add(r[1].ToString());
                lv.SubItems.Add(r[2].ToString());

                listView1.Items.Add(lv);
            }
            r.Close();
            komanda.Dispose();
            konekcija.Close();
			
			
	