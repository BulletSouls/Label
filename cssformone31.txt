using System.Data.OleDb;


        OleDbConnection con;
        OleDbCommand cmd;
        OleDbDataReader rider;

		//relative paths of base linking
		
            string putanja = Environment.CurrentDirectory;
            string[] putanjaBaze = putanja.Split(new string[] { "bin" }, StringSplitOptions.None);
            AppDomain.CurrentDomain.SetData("DataDirectory", putanjaBaze[0]);
            con = new OleDbConnection(@"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=|DataDirectory|\B31Autoplac.mdb");
        
		
        private void PopuniLV()
        {
            cmd = new OleDbCommand("SELECT * FROM GORIVO ORDER BY GorivoID ASC", con);
            con.Open();
            int i = 0;
            rider = cmd.ExecuteReader();
            while (rider.Read())
            {
                listView1.Items.Add(rider[0].ToString());
                listView1.Items[i].SubItems.Add(rider[1].ToString());
                listView1.Items[i].SubItems.Add(rider[2].ToString());
                i++;
            }
            con.Close();
        }

        //textchange
		
            int id;
            if (tbSifra.Text != "")
            {
                try { id = Int32.Parse(tbSifra.Text); }
                catch
                {
                    MessageBox.Show("Sifra mora biti broj, veci od nula!", "Greska!");
                    tbSifra.Text = "";
                    return;
                }
                if (!(id > 0))
                {
                    tbSifra.Text = "";
                    tbNaziv.Text = "";
                    tbOpis.Text = "";
                    bIzmena.Enabled = false;
                    bUpis.Enabled = false;
                    bBrisi.Enabled = false;
                    return;
                }
                cmd = new OleDbCommand("SELECT * FROM GORIVO WHERE GorivoID=" + id, con);
                con.Open();
                rider = cmd.ExecuteReader();
                if (rider.HasRows)
                {
                    rider.Read();
                    tbNaziv.Text = rider[1].ToString();
                    tbOpis.Text = rider[2].ToString();
                    bIzmena.Enabled = true;
                    bUpis.Enabled = false;
                    bBrisi.Enabled = true;
                }
                else
                {
                    tbNaziv.Text = "";
                    tbOpis.Text = "";
                    bIzmena.Enabled = false;
                    bUpis.Enabled = true;
                    bBrisi.Enabled = false;
                }

                con.Close();
            }
            else
            {
                tbNaziv.Text = "";
                tbOpis.Text = "";
                bIzmena.Enabled = false;
                bUpis.Enabled = false;
                bBrisi.Enabled = false;
            }
        

        //data entry in the database
		
            if (tbSifra.Text != "" && tbNaziv.Text != "")
            {
                cmd = new OleDbCommand("INSERT INTO GORIVO (GorivoID, Naziv, Opis) values (@GorivoID, @Naziv, @Opis)", con);
                cmd.Parameters.Add("@GorivoID", OleDbType.Numeric).Value = Int32.Parse(tbSifra.Text);
                cmd.Parameters.Add("@Naziv", OleDbType.VarChar).Value = tbNaziv.Text;
                if (tbOpis.Text == "")
                    cmd.Parameters.Add("@Opis", OleDbType.VarChar).Value = DBNull.Value;
                else
                    cmd.Parameters.Add("@Opis", OleDbType.VarChar).Value = tbOpis.Text;
                con.Open();
                try
                {
                    cmd.ExecuteNonQuery();
                    MessageBox.Show("Uspesan upis!", "Obavestenje", MessageBoxButtons.OK);

                }
                catch
                {
                    MessageBox.Show("Doslo je do greske pri upisivanju u bazu!", "Greska", MessageBoxButtons.OK);
                    tbNaziv.Text = "";
                    tbSifra.Text = "";
                    tbOpis.Text = "";
                    return;
                }
                con.Close();
                listView1.Items.Clear();
                PopuniLV();
                tbNaziv.Text = "";
                tbSifra.Text = "";
                tbOpis.Text = "";
            }
            else
                MessageBox.Show("Popunite sva obavezna polja!", "Greska", MessageBoxButtons.OK);
        

      
		//deleting data from the database
		
			int id = Int32.Parse(tbSifra.Text);
            cmd = new OleDbCommand("DELETE FROM GORIVO WHERE GorivoID=" + id + ";", con);
            con.Open();
            try
            {
                cmd.ExecuteNonQuery();
            }
            catch
            {
                MessageBox.Show("Doslo je do greske pri brisanju iz baze!", "Greska", MessageBoxButtons.OK);
                con.Close();
                tbNaziv.Text = "";
                tbOpis.Text = "";
                return;
            }
            con.Close();
            MessageBox.Show("Uspesno brisanje!", "Obavestenje", MessageBoxButtons.OK);
            tbNaziv.Text = "";
            tbSifra.Text = "";
            tbOpis.Text = "";
            listView1.Items.Clear();
            PopuniLV();
       
		//database update in database

			if (tbNaziv.Text == "")
            {
                MessageBox.Show("Naziv je obavezno polje!", "Obavestenje");
            }
            else
            {
                cmd = new OleDbCommand("UPDATE GORIVO SET Naziv=@Naziv, Opis=@Opis WHERE GorivoID=" + Int32.Parse(tbSifra.Text), con);
                cmd.Parameters.Add("@Naziv", OleDbType.VarChar).Value = tbNaziv.Text;
                if (tbOpis.Text != "")
                    cmd.Parameters.Add("@Opis", OleDbType.VarChar).Value = tbOpis.Text;

                else
                    cmd.Parameters.Add("@Opis", OleDbType.VarChar).Value = DBNull.Value;
                con.Open();
                try
                {
                    cmd.ExecuteNonQuery();
                }
                catch
                {
                    MessageBox.Show("Doslo je do greske pri izmeni podataka!", "Greska", MessageBoxButtons.OK);
                    con.Close();
                    tbNaziv.Text = "";
                    tbOpis.Text = "";
                    return;
                }
                MessageBox.Show("Uspesna izmena!", "Obavestenje", MessageBoxButtons.OK);
                con.Close();
                listView1.Items.Clear();
                PopuniLV();
                tbNaziv.Text = "";
                tbSifra.Text = "";
                tbOpis.Text = "";
            }
            
        
