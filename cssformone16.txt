using System.Data.OleDb;

		OleDbConnection con;
        OleDbCommand cmd;
        OleDbDataReader rider;

		//relative paths of base linking
		
			string putanja = Environment.CurrentDirectory;
            string[] putanjaBaze = putanja.Split(new string[] { "bin" }, StringSplitOptions.None);
            AppDomain.CurrentDomain.SetData("DataDirectory", putanjaBaze[0]);
            con = new OleDbConnection(@"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=|DataDirectory|\DVDkolekcija.accdb");

		//
		 private void PopunaListe(OleDbCommand cmd, OleDbDataReader rider)
        {
            cmd = new OleDbCommand("SELECT * FROM Citalac", con);
            con.Open();
            rider = cmd.ExecuteReader();
            int i = 0;
            while (rider.Read())
            {
                listView1.Items.Add(rider[0].ToString());
                listView1.Items[i].SubItems.Add(rider[1].ToString());
                listView1.Items[i].SubItems.Add(rider[2].ToString());
                listView1.Items[i].SubItems.Add(rider[3].ToString());
                listView1.Items[i].SubItems.Add(rider[4].ToString());
                listView1.Items[i].SubItems.Add(rider[5].ToString());
                listView1.Items[i].SubItems.Add(rider[6].ToString());
                i++;
            }
            con.Close();
        }
		
		  private int ProveriMaticni(string maticni)
        {
            string resto;
            try
            {
                resto = maticni.Substring(7);
            }
            catch
            {
                return 0;
            }
            if (resto.Count() != 6)
            {
                return 0;
            }
            int dan = Int32.Parse(maticni.Substring(0, 2));
            int mesec = Int32.Parse(maticni.Substring(2, 2));
            int god=Int32.Parse(maticni.Substring(4, 3));
            if(god>900)
            {
                string godina='1'+god.ToString();
                god=Int32.Parse(godina);
            }
            else if (god < 0 || god > 18)
            {
                return 0;
            }
            else
            {
                string godina;
                if (god >= 10)
                {
                    godina = "20" + god.ToString();
                }
                else
                    godina = "200" + god.ToString();
                god = Int32.Parse(godina);
            }
            if (mesec>12 || mesec<=0)
                return 0;
            switch (mesec)
            {
                case 1: case 3: case 5: case 7: case 8: case 10: case 12:
                    if (dan > 31)
                        return 0;
                    break;
                case 4: case 6: case 9: case 11:
                    if (dan > 30)
                        return 0;
                    break;
                case 2:
                    if(god%4==0)
                    {
                        if (dan > 29)
                            return 0;
                    }
                    else
                    {
                        if (dan > 28)
                            return 0;
                    }
                    break;
            }
            return 1;
        }
		
		//formload
		
			PopunaListe(cmd, rider);
            bUpisi.Enabled = false;
            bObrisi.Enabled = false;
            bIzmeni.Enabled = false;
		
		
		//textchange
		
		if (tbSif.Text != "")
            {
                int id;
                try
                {
                    id = Int32.Parse(tbSif.Text);
                }
                catch
                {
                    MessageBox.Show("Sifra mora biti broj!", "Greska!");
                    tbSif.Text = "";
                    return;
                }
                if (id <= 0)
                {
                    MessageBox.Show("Sifra mora biti broj veci od 0!", "Greska!");
                    tbSif.Text = "";
                    return;
                }
                cmd = new OleDbCommand("SELECT * FROM Citalac WHERE CitalacID=" + id, con);
                con.Open();
                rider = cmd.ExecuteReader();
                rider.Read();
                if (rider.HasRows)
                {
                    tbMat.Text = rider[1].ToString();
                    tbIme.Text = rider[2].ToString();
                    tbPrez.Text = rider[3].ToString();
                    tbMesto.Text = rider[4].ToString();
                    tbAdr.Text = rider[5].ToString();
                    tbTel.Text = rider[6].ToString();
                    bUpisi.Enabled = false;
                    bObrisi.Enabled = true;
                    bIzmeni.Enabled = true;
                }
                else
                {
                    tbMat.Text = "";
                    tbIme.Text = "";
                    tbPrez.Text = "";
                    tbMesto.Text = "";
                    tbAdr.Text = "";
                    tbTel.Text = "";
                    bUpisi.Enabled = true;
                    bObrisi.Enabled = false;
                    bIzmeni.Enabled = false;
                }
                con.Close();
            }
            else
            {
                tbMat.Text = "";
                tbIme.Text = "";
                tbPrez.Text = "";
                tbMesto.Text = "";
                tbAdr.Text = "";
                tbTel.Text = "";
            }
		//button entry data
		
		if (tbMat.Text != "" && tbIme.Text != "" && tbPrez.Text != "" && tbMesto.Text != "")
            {
                if(ProveriMaticni(tbMat.Text)==0)
                {
                    MessageBox.Show("Maticni broj nije ispravan!", "Greska!");
                    tbMat.Text = "";
                    return;
                }
                cmd = new OleDbCommand("INSERT INTO Citalac (CitalacID, MaticniBroj, Ime, Prezime, Mesto, Adresa, Telefon) values (@CitalacID, @MaticniBroj, @Ime, @Prezime, @Mesto, @Adresa, @Telefon)", con);
                cmd.Parameters.AddWithValue("@CitalacID", Int32.Parse(tbSif.Text));
                cmd.Parameters.AddWithValue("@MaticniBroj", Int64.Parse(tbMat.Text));
                cmd.Parameters.AddWithValue("@Ime", tbIme.Text);
                cmd.Parameters.AddWithValue("@Prezime", tbPrez.Text);
                cmd.Parameters.AddWithValue("@Mesto", tbMesto.Text);
                if (tbAdr.Text != "")
                    cmd.Parameters.AddWithValue("@Adresa", tbAdr.Text);
                else
                    cmd.Parameters.AddWithValue("@Adresa", DBNull.Value);
                if (tbTel.Text != "")
                    cmd.Parameters.AddWithValue("@Telefon", tbTel.Text);
                else
                    cmd.Parameters.AddWithValue("@Telefon", DBNull.Value);
                con.Open();
                try
                {
                    cmd.ExecuteNonQuery();
                    MessageBox.Show("Uspesan upis u bazu!", "Obavestenje!");
                    tbSif.Text = "";
                    con.Close();
                    listView1.Items.Clear();
                    PopunaListe(cmd, rider);
                }
                catch
                {
                    MessageBox.Show("Doslo je do greske pri upisu u bazu!", "Greska!");
                    con.Close();
                }

            }

            else
            {
                MessageBox.Show("Popunite obavezna polja: Sifra, Maticni broj, Ime, Prezime i Mesto!", "Greska!");
            }
			
		//deleting data from the database
		  int id = Int32.Parse(tbSif.Text);
            cmd = new OleDbCommand("SELECT * FROM Na_citanju WHERE CitalacID=" + id, con);
            con.Open();
            rider = cmd.ExecuteReader();
            rider.Read();
            if (rider.HasRows)
            {
                MessageBox.Show("Nije moguce obrisati ovog citaoca jer se nalazi u vise od jedne tabele!", "Greska!");
                tbSif.Text = "";
                con.Close();
                return;
            }
            else
            {
                con.Close();
                cmd = new OleDbCommand("DELETE * FROM Citalac WHERE CitalacID=" + id, con);
                con.Open();
                try
                {
                    cmd.ExecuteNonQuery();
                    MessageBox.Show("Uspesno brisanje!", "Obavestenje!");
                    con.Close();
                    tbSif.Text = "";
                    listView1.Items.Clear();
                    PopunaListe(cmd, rider);

                }
                catch
                {
                    MessageBox.Show("Doslo je do greske pri brisanju!", "Greska!");
                    con.Close();
                }
            }
		
		//database update in database
		
		 int id = Int32.Parse(tbSif.Text);
            if (tbMat.Text != "" && tbIme.Text != "" && tbPrez.Text != "" && tbMesto.Text != "")
            {
                if (ProveriMaticni(tbMat.Text) == 0)
                {
                    MessageBox.Show("Maticni broj nije ispravan!", "Greska!");
                    tbMat.Text = "";
                    return;
                }
                cmd = new OleDbCommand("UPDATE Citalac SET MaticniBroj=@MaticniBroj, Ime=@Ime, Prezime=@Prezime, Mesto=@Mesto, Adresa=@Adresa, Telefon=@Telefon WHERE CitalacID="+id+" ;", con);
                cmd.Parameters.AddWithValue("@MaticniBroj", Int64.Parse(tbMat.Text));
                cmd.Parameters.AddWithValue("@Ime", tbIme.Text);
                cmd.Parameters.AddWithValue("@Prezime", tbPrez.Text);
                cmd.Parameters.AddWithValue("@Mesto", tbMesto.Text);
                if (tbAdr.Text != "")
                    cmd.Parameters.AddWithValue("@Adresa", tbAdr.Text);
                else
                    cmd.Parameters.AddWithValue("@Adresa", DBNull.Value);
                if (tbTel.Text != "")
                    cmd.Parameters.AddWithValue("@Telefon", tbTel.Text);
                else
                    cmd.Parameters.AddWithValue("@Telefon", DBNull.Value);
                con.Open();
                try
                {
                    cmd.ExecuteNonQuery();
                    MessageBox.Show("Uspesna izmena baze!", "Obavestenje!");
                    tbSif.Text = "";
                    con.Close();
                    listView1.Items.Clear();
                    PopunaListe(cmd, rider);
                }
                catch
                {
                    MessageBox.Show("Doslo je do greske pri izmeni baze!", "Greska!");
                    con.Close();
                }